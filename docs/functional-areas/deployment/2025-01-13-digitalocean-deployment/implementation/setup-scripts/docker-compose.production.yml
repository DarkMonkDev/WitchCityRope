# WitchCityRope Production Docker Compose Configuration
# Optimized for DigitalOcean deployment with resource constraints
# Usage: docker-compose -f docker-compose.production.yml up -d

version: '3.8'

networks:
  witchcity-production:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16

volumes:
  api_uploads_prod:
    driver: local
  web_dist_prod:
    driver: local
  redis_data_prod:
    driver: local

services:
  # Production API Service
  api:
    image: ${API_IMAGE:-registry.digitalocean.com/witchcityrope/witchcityrope-api:latest}
    container_name: witchcity-api-prod
    restart: unless-stopped
    networks:
      - witchcity-production
    ports:
      - "5001:8080"  # Internal port for Nginx proxy
    volumes:
      - api_uploads_prod:/app/uploads
      - /var/log/witchcityrope/production:/app/logs
    env_file:
      - .env.production
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.rule=Host(`witchcityrope.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-prod.tls=true"

  # Production Web Service
  web:
    image: ${WEB_IMAGE:-registry.digitalocean.com/witchcityrope/witchcityrope-web:latest}
    container_name: witchcity-web-prod
    restart: unless-stopped
    networks:
      - witchcity-production
    ports:
      - "3001:3000"  # Internal port for Nginx proxy
    volumes:
      - web_dist_prod:/app/dist
      - /var/log/witchcityrope/production:/app/logs
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=/api
      - VITE_APP_ENVIRONMENT=production
      - VITE_APP_NAME=WitchCityRope
      - VITE_APP_VERSION=${APP_VERSION:-1.0.0}
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-prod.rule=Host(`witchcityrope.com`)"
      - "traefik.http.routers.web-prod.tls=true"

  # Redis Cache Service (Shared between environments)
  redis:
    image: redis:7-alpine
    container_name: witchcity-redis-prod
    restart: unless-stopped
    networks:
      - witchcity-production
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--maxmemory", "512mb",
      "--maxmemory-policy", "allkeys-lru",
      "--save", "900", "1",
      "--save", "300", "10",
      "--save", "60", "10000"
    ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Nginx Reverse Proxy (Optional - can use system nginx instead)
  # nginx:
  #   image: nginx:alpine
  #   container_name: witchcity-nginx-prod
  #   restart: unless-stopped
  #   networks:
  #     - witchcity-production
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/sites:/etc/nginx/conf.d:ro
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
  #     - /var/log/nginx:/var/log/nginx
  #   depends_on:
  #     - web
  #     - api
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

# Health check service for monitoring
  healthcheck:
    image: alpine:latest
    container_name: witchcity-healthcheck-prod
    restart: "no"
    networks:
      - witchcity-production
    depends_on:
      - api
      - web
      - redis
    command: |
      sh -c '
        apk add --no-cache curl &&
        echo "Testing production services..." &&
        curl -f http://api:8080/health &&
        curl -f http://web:3000 &&
        redis-cli -h redis ping &&
        echo "All services healthy!"
      '

# Production-specific configurations
x-production-defaults: &production-defaults
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

# Security configurations
x-security-defaults: &security-defaults
  security_opt:
    - no-new-privileges:true
  read_only: false  # Set to true for increased security, but may break uploads
  tmpfs:
    - /tmp:rw,size=100M