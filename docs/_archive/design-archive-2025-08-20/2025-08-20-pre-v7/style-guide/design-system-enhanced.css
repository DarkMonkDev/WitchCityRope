/* Witch City Rope Enhanced Design System CSS */
/* Complete design system with all interaction states */

/* ===== CSS Variables ===== */
:root {
  /* Primary Brand Colors */
  --color-burgundy: #880124;
  --color-burgundy-dark: #660018;
  --color-burgundy-light: #9F1D35;
  --color-plum: #614B79;
  
  /* Warm Metallics */
  --color-rose-gold: #B76D75;
  --color-copper: #B87333;
  --color-brass: #C9A961;
  
  /* CTA Accent Colors */
  --color-electric: #9D4EDD;
  --color-electric-dark: #7B2CBF;
  --color-amber: #FFBF00;
  --color-amber-dark: #E6AC00;
  
  /* Supporting Tones */
  --color-dusty-rose: #D4A5A5;
  --color-midnight: #1A1A2E;
  
  /* Warm Neutrals */
  --color-charcoal: #2B2B2B;
  --color-smoke: #4A4A4A;
  --color-stone: #8B8680;
  --color-taupe: #B8B0A8;
  --color-ivory: #FFF8F0;
  --color-cream: #FAF6F2;
  
  /* Status Colors */
  --color-success: #228B22;
  --color-success-light: #90EE90;
  --color-success-dark: #006400;
  --color-warning: #DAA520;
  --color-warning-light: #FFD700;
  --color-warning-dark: #B8860B;
  --color-error: #DC143C;
  --color-error-light: #FF6B6B;
  --color-error-dark: #8B0000;
  --color-info: #4169E1;
  --color-info-light: #6495ED;
  --color-info-dark: #191970;
  
  /* Typography */
  --font-display: 'Bodoni Moda', serif;
  --font-heading: 'Montserrat', sans-serif;
  --font-body: 'Source Sans 3', sans-serif;
  --font-accent: 'Satisfy', cursive;
  
  /* Font Sizes */
  --text-xs: 12px;
  --text-sm: 14px;
  --text-base: 16px;
  --text-lg: 18px;
  --text-xl: 20px;
  --text-2xl: 24px;
  --text-3xl: 28px;
  --text-4xl: 32px;
  --text-5xl: 40px;
  --text-6xl: 48px;
  
  /* Font Weights */
  --font-light: 300;
  --font-regular: 400;
  --font-medium: 500;
  --font-semibold: 600;
  --font-bold: 700;
  --font-extrabold: 800;
  
  /* Line Heights */
  --leading-tight: 1.2;
  --leading-normal: 1.6;
  --leading-relaxed: 1.8;
  
  /* Spacing (4px grid) */
  --space-xs: 8px;
  --space-sm: 16px;
  --space-md: 24px;
  --space-lg: 32px;
  --space-xl: 40px;
  --space-2xl: 48px;
  --space-3xl: 64px;
  
  /* Border Radius */
  --radius-sm: 4px;
  --radius-base: 6px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
  --radius-pill: 9999px;
  --radius-full: 50%;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px rgba(0,0,0,0.05);
  --shadow-base: 0 2px 4px rgba(0,0,0,0.08);
  --shadow-md: 0 4px 8px rgba(0,0,0,0.1);
  --shadow-lg: 0 8px 16px rgba(0,0,0,0.12);
  --shadow-xl: 0 12px 24px rgba(0,0,0,0.15);
  --shadow-2xl: 0 24px 48px rgba(0,0,0,0.2);
  --shadow-inner: inset 0 2px 4px rgba(0,0,0,0.06);
  
  /* Transitions */
  --transition-fast: 150ms ease;
  --transition-base: 300ms ease;
  --transition-slow: 500ms ease;
  
  /* Z-index */
  --z-dropdown: 10;
  --z-sticky: 20;
  --z-modal-backdrop: 30;
  --z-modal: 40;
  --z-tooltip: 50;
}

/* ===== Interaction States ===== */

/* Focus States */
.focusable:focus,
.btn:focus,
.form-input:focus,
.form-textarea:focus,
.form-select:focus,
.link:focus {
  outline: 3px solid rgba(136, 1, 36, 0.4);
  outline-offset: 2px;
}

/* Focus Visible (keyboard navigation) */
.focusable:focus-visible,
.btn:focus-visible,
.form-input:focus-visible,
.link:focus-visible {
  outline: 3px solid var(--color-burgundy);
  outline-offset: 2px;
}

/* Disabled States */
.btn:disabled,
.btn.disabled,
.form-input:disabled,
.form-textarea:disabled,
.form-select:disabled,
.checkbox:disabled,
.radio:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.btn:disabled {
  background-color: var(--color-stone);
  color: var(--color-taupe);
  border-color: var(--color-stone);
}

.form-input:disabled,
.form-textarea:disabled,
.form-select:disabled {
  background-color: var(--color-cream);
  border-color: var(--color-taupe);
  color: var(--color-stone);
}

/* Loading States */
.loading {
  position: relative;
  color: transparent !important;
  pointer-events: none;
}

.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid var(--color-taupe);
  border-top-color: var(--color-burgundy);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.btn.loading::after {
  border-color: rgba(255, 255, 255, 0.3);
  border-top-color: white;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Skeleton Loading */
.skeleton {
  background: linear-gradient(90deg, 
    var(--color-cream) 25%, 
    var(--color-taupe) 50%, 
    var(--color-cream) 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.2s ease-in-out infinite;
}

@keyframes skeleton-loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

/* ===== Enhanced Button States ===== */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-xs);
  padding: 14px 32px;
  font-family: var(--font-heading);
  font-size: 14px;
  font-weight: var(--font-semibold);
  text-transform: uppercase;
  letter-spacing: 1.5px;
  text-decoration: none;
  border: none;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

/* Primary Button States */
.btn-primary {
  background: linear-gradient(135deg, var(--color-amber) 0%, var(--color-amber-dark) 100%);
  color: var(--color-midnight);
  box-shadow: 0 4px 15px rgba(255, 191, 0, 0.4);
}

.btn-primary:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--color-amber-dark) 0%, var(--color-amber) 100%);
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(255, 191, 0, 0.5);
}

.btn-primary:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: 0 2px 10px rgba(255, 191, 0, 0.4);
}

/* Secondary Button States */
.btn-secondary {
  background: transparent;
  color: var(--color-burgundy);
  border: 2px solid var(--color-burgundy);
  position: relative;
  z-index: 1;
}

.btn-secondary::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--color-burgundy);
  transition: width var(--transition-base);
  z-index: -1;
}

.btn-secondary:hover:not(:disabled) {
  color: var(--color-ivory);
}

.btn-secondary:hover:not(:disabled)::before {
  width: 100%;
}

.btn-secondary:active:not(:disabled) {
  transform: scale(0.98);
}

/* Electric Purple Button States */
.btn-electric {
  background: linear-gradient(135deg, var(--color-electric) 0%, var(--color-electric-dark) 100%);
  color: var(--color-ivory);
  box-shadow: 0 4px 15px rgba(157, 78, 221, 0.4);
}

.btn-electric:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--color-electric-dark) 0%, var(--color-electric) 100%);
  transform: translateY(-2px);
  box-shadow: 0 6px 25px rgba(157, 78, 221, 0.5);
}

/* ===== Form Input States ===== */
.form-input,
.form-textarea,
.form-select {
  width: 100%;
  padding: var(--space-sm);
  font-family: var(--font-body);
  font-size: var(--text-base);
  line-height: var(--leading-normal);
  background-color: var(--color-cream);
  border: 2px solid var(--color-taupe);
  border-radius: var(--radius-md);
  transition: all var(--transition-base);
}

/* Hover State */
.form-input:hover:not(:disabled),
.form-textarea:hover:not(:disabled),
.form-select:hover:not(:disabled) {
  border-color: var(--color-stone);
}

/* Focus State */
.form-input:focus:not(:disabled),
.form-textarea:focus:not(:disabled),
.form-select:focus:not(:disabled) {
  background-color: var(--color-ivory);
  border-color: var(--color-burgundy);
  box-shadow: 0 0 0 3px rgba(136, 1, 36, 0.1);
}

/* Error State */
.form-input.error,
.form-textarea.error,
.form-select.error {
  border-color: var(--color-error);
  background-color: rgba(220, 20, 60, 0.05);
}

.form-input.error:focus,
.form-textarea.error:focus,
.form-select.error:focus {
  border-color: var(--color-error);
  box-shadow: 0 0 0 3px rgba(220, 20, 60, 0.1);
}

/* Success State */
.form-input.success,
.form-textarea.success,
.form-select.success {
  border-color: var(--color-success);
  background-color: rgba(34, 139, 34, 0.05);
}

/* ===== Checkbox & Radio States ===== */
.checkbox,
.radio {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  padding-left: 28px;
  transition: all var(--transition-base);
}

.checkbox input,
.radio input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.checkbox .checkmark,
.radio .checkmark {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 20px;
  width: 20px;
  background-color: var(--color-cream);
  border: 2px solid var(--color-taupe);
  border-radius: var(--radius-sm);
  transition: all var(--transition-base);
}

.radio .checkmark {
  border-radius: var(--radius-full);
}

/* Hover State */
.checkbox:hover input:not(:disabled) ~ .checkmark,
.radio:hover input:not(:disabled) ~ .checkmark {
  border-color: var(--color-burgundy);
  background-color: var(--color-ivory);
}

/* Checked State */
.checkbox input:checked ~ .checkmark,
.radio input:checked ~ .checkmark {
  background-color: var(--color-burgundy);
  border-color: var(--color-burgundy);
}

/* Checked Mark */
.checkbox .checkmark:after,
.radio .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.checkbox input:checked ~ .checkmark:after,
.radio input:checked ~ .checkmark:after {
  display: block;
}

.checkbox .checkmark:after {
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid var(--color-ivory);
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.radio .checkmark:after {
  left: 6px;
  top: 6px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-ivory);
}

/* ===== Toggle Switch States ===== */
.toggle {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 28px;
}

.toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-taupe);
  border-radius: var(--radius-pill);
  transition: all var(--transition-base);
}

.toggle-slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 4px;
  bottom: 4px;
  background-color: var(--color-ivory);
  border-radius: var(--radius-full);
  transition: all var(--transition-base);
}

/* Hover State */
.toggle:hover .toggle-slider {
  background-color: var(--color-stone);
}

/* Checked State */
.toggle input:checked + .toggle-slider {
  background-color: var(--color-burgundy);
}

.toggle input:checked + .toggle-slider:before {
  transform: translateX(32px);
}

/* Disabled State */
.toggle input:disabled + .toggle-slider {
  opacity: 0.5;
  cursor: not-allowed;
}

/* ===== Card States ===== */
.card {
  background-color: var(--color-ivory);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  box-shadow: var(--shadow-md);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

/* Hover State */
.card.interactive:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
}

/* Active/Selected State */
.card.selected {
  border: 2px solid var(--color-burgundy);
  box-shadow: 0 0 0 4px rgba(136, 1, 36, 0.1);
}

/* Loading State */
.card.loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.4), 
    transparent);
  animation: card-loading 1.5s ease-in-out infinite;
}

@keyframes card-loading {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* ===== Link States ===== */
.link {
  color: var(--color-burgundy);
  text-decoration: none;
  position: relative;
  transition: all var(--transition-base);
}

.link::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: var(--color-burgundy);
  transition: width var(--transition-base);
}

.link:hover {
  color: var(--color-burgundy-light);
}

.link:hover::after {
  width: 100%;
}

.link:active {
  color: var(--color-burgundy-dark);
}

.link:visited {
  color: var(--color-plum);
}

/* ===== Modal & Overlay States ===== */
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(26, 26, 46, 0.8);
  backdrop-filter: blur(4px);
  z-index: var(--z-modal-backdrop);
  opacity: 0;
  transition: opacity var(--transition-base);
}

.modal-backdrop.show {
  opacity: 1;
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.9);
  background-color: var(--color-ivory);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-2xl);
  z-index: var(--z-modal);
  opacity: 0;
  transition: all var(--transition-base);
}

.modal.show {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

/* ===== Tooltip States ===== */
.tooltip {
  position: absolute;
  background-color: var(--color-midnight);
  color: var(--color-ivory);
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--radius-sm);
  font-size: var(--text-sm);
  white-space: nowrap;
  z-index: var(--z-tooltip);
  opacity: 0;
  transform: translateY(4px);
  transition: all var(--transition-fast);
  pointer-events: none;
}

.tooltip.show {
  opacity: 1;
  transform: translateY(0);
}

/* ===== Dropdown States ===== */
.dropdown-menu {
  position: absolute;
  background-color: var(--color-ivory);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  z-index: var(--z-dropdown);
  opacity: 0;
  transform: translateY(-8px);
  transition: all var(--transition-fast);
  visibility: hidden;
}

.dropdown-menu.show {
  opacity: 1;
  transform: translateY(0);
  visibility: visible;
}

.dropdown-item {
  padding: var(--space-sm) var(--space-md);
  transition: all var(--transition-fast);
  cursor: pointer;
}

.dropdown-item:hover {
  background-color: var(--color-cream);
  color: var(--color-burgundy);
}

/* ===== Progress Bar States ===== */
.progress {
  height: 8px;
  background-color: var(--color-cream);
  border-radius: var(--radius-pill);
  overflow: hidden;
  position: relative;
}

.progress-bar {
  height: 100%;
  background: linear-gradient(135deg, var(--color-burgundy) 0%, var(--color-burgundy-light) 100%);
  border-radius: var(--radius-pill);
  transition: width var(--transition-slow);
  position: relative;
  overflow: hidden;
}

.progress-bar.animated::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.3), 
    transparent);
  animation: progress-shine 2s ease-in-out infinite;
}

@keyframes progress-shine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* ===== Alert States ===== */
.alert {
  padding: var(--space-md);
  border-radius: var(--radius-md);
  margin-bottom: var(--space-md);
  border: 2px solid transparent;
  position: relative;
  animation: alertSlideIn var(--transition-base);
}

@keyframes alertSlideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.alert-success {
  background-color: rgba(34, 139, 34, 0.1);
  border-color: var(--color-success);
  color: var(--color-success-dark);
}

.alert-warning {
  background-color: rgba(218, 165, 32, 0.1);
  border-color: var(--color-warning);
  color: var(--color-warning-dark);
}

.alert-error {
  background-color: rgba(220, 20, 60, 0.1);
  border-color: var(--color-error);
  color: var(--color-error-dark);
}

.alert-info {
  background-color: rgba(65, 105, 225, 0.1);
  border-color: var(--color-info);
  color: var(--color-info-dark);
}

/* ===== Accessibility Helpers ===== */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.skip-to-content {
  position: absolute;
  top: -40px;
  left: 0;
  background: var(--color-burgundy);
  color: var(--color-ivory);
  padding: var(--space-xs) var(--space-sm);
  text-decoration: none;
  border-radius: var(--radius-sm);
  z-index: 100;
}

.skip-to-content:focus {
  top: 10px;
}

/* ===== Reduced Motion ===== */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ===== Dark Mode Support ===== */
@media (prefers-color-scheme: dark) {
  :root {
    /* Adjust colors for dark mode if needed */
    /* This is a placeholder for future dark mode implementation */
  }
}