# WitchCityRope Test Catalog - Navigation Index
<!-- Last Updated: 2025-10-28 (Historical Event Seeding - CRITICAL BLOCKER FOUND) -->
<!-- Version: 10.2 - Duplicate ticket number bug blocks seeding -->
<!-- Owner: Testing Team -->
<!-- Status: NAVIGATION INDEX - Lightweight file for agent accessibility -->

## üìã About This Catalog

This is a **navigation index** for the WitchCityRope test catalog. The full catalog is split into manageable parts to stay within token limits for AI agents.

**File Size**: This index is kept under 700 lines to ensure AI agents can read it during startup.

**Coverage**: Now documents all 271+ test files across all test types (E2E, React, C# Backend, Infrastructure) + CMS verification

---

## üó∫Ô∏è Catalog Structure

### Part 1 (This File): Navigation & Current Status
- **You are here** - Quick navigation and current test status
- **Use for**: Finding specific test information, understanding catalog organization

### Part 2: Historical Test Documentation
- **Location**: `/docs/standards-processes/testing/TEST_CATALOG_PART_2.md`
- **Contains**: September 2025 test transformations, historical patterns, cleanup notes
- **Use for**: Understanding test migration patterns, historical context

### Part 3: Archived Test Information
- **Location**: `/docs/standards-processes/testing/TEST_CATALOG_PART_3.md`
- **Contains**: Legacy test architecture, obsolete patterns, archived migration info
- **Use for**: Historical context, understanding why approaches were abandoned

### Part 4: Complete Test File Listings
- **Location**: `/docs/standards-processes/testing/TEST_CATALOG_PART_4.md`
- **Contains**: All 271+ test files with descriptions and locations
- **Sections**: E2E Playwright (89), React Unit (20+), C# Backend (56), Legacy (29+)
- **Use for**: Finding specific test files, understanding test coverage by feature

---

## üîç Quick Navigation

### Current Test Status (October 2025)

**Latest Updates** (2025-10-28 06:00 UTC - HISTORICAL EVENT SEEDING VERIFICATION - CRITICAL BLOCKER):

- üî¥ **HISTORICAL EVENT SEEDING VERIFICATION - CRITICAL FAILURE** (2025-10-28 06:00 UTC):
  - **Purpose**: Verify that backend-developer's fix (adding `SeedHistoricalWorkshopTicketsAsync()` call) successfully seeds 100% of historical event data
  - **Test Execution Status**: ‚ùå **CRITICAL FAILURE - NEW BUG INTRODUCED**
  - **Completion Rate**: **0% (REGRESSION from 45%)**
  - **Critical Finding**: **NEW BUG** in historical ticket seeding method blocks ALL seeding
  - **Root Cause**: Duplicate ticket number generation in `TicketPurchaseSeeder.CreateHistoricalWorkshopTicketsAsync()`
  - **Bug Location**: `/apps/api/Services/Seeding/TicketPurchaseSeeder.cs:468`
  - **Bug Details**:
    - Uses per-ticket-type loop index `i` instead of global counter for ticket numbers
    - Multiple ticket types generate same ticket numbers (e.g., TKT-xxx-0001, TKT-xxx-0002)
    - Database constraint violation: `IX_EventAttendees_TicketNumber_Unique`
    - API crashes during seeding, enters crash loop
  - **Test Results**:
    - Database dropped and recreated: ‚úÖ SUCCESS (42 tables)
    - Migrations applied: ‚úÖ SUCCESS (9 migrations)
    - API seeding: ‚ùå **CRASHED** (duplicate key constraint violation)
    - Data completion: **0%** (no data seeded at all)
  - **Environment Health**: ‚ö†Ô∏è **API UNHEALTHY**
    - Docker containers: Web healthy, API unhealthy (crash loop), DB healthy
    - API health endpoint: ‚ùå FAILING (connection reset)
    - React app: ‚úÖ Serving correctly on port 5173
    - Database: Empty (fresh schema, no seed data)
  - **Business Impact**: üî¥ **CRITICAL BLOCKER**
    - Cannot start API (crashes on startup)
    - Cannot test original fix (45% ‚Üí 100% completion)
    - Cannot test any features requiring seed data
    - Development and testing completely blocked
    - **REGRESSION**: 0% data (worse than 45% before fix)
  - **Comparison to Previous State**:
    - **Before Fix**: 45% complete (12 participations, missing historical workshop data)
    - **Expected After Fix**: 100% complete (55+ participations, all historical data)
    - **Actual After Fix**: **0% complete (API crashes, zero data seeded)**
    - **Assessment**: **CRITICAL REGRESSION** (-45% completion)
  - **Required Fix** (backend-developer):
    - **Priority**: P0 - CRITICAL BLOCKER
    - **File**: `/apps/api/Services/Seeding/TicketPurchaseSeeder.cs`
    - **Line**: 468
    - **Change**: Replace `{i + 1:D4}` with global counter across all ticket types
    - **Estimated Time**: 5 minutes
    - **Example Fix**:
      ```csharp
      int globalTicketCounter = 1; // Outside ticket type loop
      foreach (var (ticketTypeName, purchaseCount) in purchasesByType)
      {
          for (int i = 0; i < purchaseCount; i++)
          {
              TicketNumber = $"TKT-{evt.Id.ToString()[..8]}-{globalTicketCounter:D4}";
              globalTicketCounter++; // Increment for ALL tickets
          }
      }
      ```
  - **Test Report**: `/test-results/historical-event-seeding-test-report-2025-10-28.md`
  - **Files Analyzed**:
    - `/apps/api/Services/Seeding/TicketPurchaseSeeder.cs` - Identified buggy ticket number generation
    - `/apps/api/Services/Seeding/SeedCoordinator.cs` - Confirmed method IS being called (original fix worked)
  - **Status**: üî¥ **BLOCKED - AWAITING backend-developer FIX**
  - **Next Steps**:
    1. backend-developer: Fix duplicate ticket number bug (5 min)
    2. backend-developer: Test fix locally (drop DB, verify seeding completes)
    3. test-executor: Re-run full verification suite after fix deployed
    4. test-executor: Confirm 100% completion (vs 45% before)
  - **catalog_updated**: true (2025-10-28 06:00 UTC - critical blocker documented)

**Previous Updates** (2025-10-28 02:15 UTC - LOGIN WITH EMAIL OR SCENE NAME TESTS - ALL PASSING):

- ‚úÖ **LOGIN WITH EMAIL OR SCENE NAME FEATURE TESTS - COMPLETE SUCCESS** (2025-10-28 02:15 UTC):
  - **Purpose**: Comprehensive test coverage for new authentication feature allowing login with email OR scene name
  - **Feature**: Users can now login using either email address or scene name (backend tries email first, then scene name lookup)
  - **Test Execution Status**: ‚úÖ **SUCCESS - 14/14 E2E TESTS PASSING**
  - **Final Results**:
    - **E2E Tests** (14 tests): ‚úÖ **ALL PASSING**
      - ‚úÖ P1 CRITICAL: Email login path (2 tests) - PASSING
      - ‚úÖ P1 CRITICAL: Scene name login path (2 tests) - PASSING
      - ‚úÖ P1 Error Handling: Invalid credentials (2 tests) - PASSING
      - ‚úÖ P1 Validation: Empty field validation (3 tests) - PASSING
      - ‚úÖ Edge Cases: Whitespace, case sensitivity, UI text (5 tests) - PASSING
      - Location: `/apps/web/tests/playwright/auth/login-with-scene-name.spec.ts`
    - **Backend Unit Tests** (5 tests): ‚úÖ **EXIST** (in AuthenticationServiceTests.cs)
    - **Backend Integration Tests** (7 tests): ‚úÖ **EXIST** (in LoginIntegrationTests.cs)
  - **Fixes Applied**:
    1. ‚úÖ **E2E localStorage bug fixed**: Moved clearAuthState() after page.goto() in beforeEach
    2. ‚úÖ **AuthHelpers updated**: Changed data-testid from "email-input" to "email-or-scenename-input"
    3. ‚úÖ **PricingTiers cleanup**: Removed all commented PricingTiers code from test builders
    4. ‚úÖ **API response structure**: Fixed test to use loginData.user.sceneName (not loginData.data.user.sceneName)
    5. ‚úÖ **API status code fix**: Backend now returns 401 for invalid credentials (was 400)
    6. ‚úÖ **Test expectations updated**: Changed from "Invalid" to "incorrect" to match frontend error messages
  - **Environment Health**: ‚úÖ **100% OPERATIONAL**
    - Docker containers: All healthy (Web: 5173, API: 5655, DB: 5434)
    - API health: http://localhost:5655/health ‚Üí 200 OK
    - Database: 7 test users with scene names (RopeMaster, SafetyFirst, RopeEnthusiast)
  - **Business Impact**: ‚úÖ **FEATURE VERIFIED AND WORKING**
    - ‚úÖ Email login confirmed working
    - ‚úÖ Scene name login confirmed working
    - ‚úÖ Error handling verified (wrong password, invalid credentials)
    - ‚úÖ Validation logic tested (empty fields, whitespace)
    - ‚úÖ Edge cases confirmed (case sensitivity for scene names, case insensitivity for emails)
  - **Files Created**:
    - `/apps/web/tests/playwright/auth/login-with-scene-name.spec.ts` - E2E test suite (14 tests, ALL PASSING)
    - `/tests/unit/api/Features/Auth/LoginIntegrationTests.cs` - Integration test file (7 tests)
  - **Files Modified**:
    - `/tests/WitchCityRope.Core.Tests/Features/Authentication/AuthenticationServiceTests.cs` - Added 5 unit tests
    - `/apps/api/Features/Authentication/Endpoints/AuthenticationEndpoints.cs` - Fixed 401 status code for auth errors
    - `/apps/api/Features/Authentication/Models/LoginRequest.cs` - Changed Email to EmailOrSceneName
    - `/apps/api/Features/Authentication/Services/AuthenticationService.cs` - Added dual lookup (email then scene name)
    - `/apps/web/src/pages/LoginPage.tsx` - Updated form to accept email or scene name
    - `/apps/web/tests/playwright/helpers/auth.helpers.ts` - Updated selectors for new field
    - `/tests/WitchCityRope.Tests.Common/Builders/CreateEventRequestBuilder.cs` - Removed PricingTiers code
    - `/tests/WitchCityRope.Tests.Common/Builders/UpdateEventRequestBuilder.cs` - Removed PricingTiers code
  - **Status**: ‚úÖ **COMPLETE - FEATURE TESTED AND VERIFIED**
  - **Catalog Updated**: true (2025-10-28 02:15 UTC - all tests passing, feature ready for deployment)

**Previous Updates** (2025-10-27 - SEED DATA SERVICE REFACTORING VERIFICATION):

- ‚úÖ **SEED DATA SERVICE REFACTORING VERIFIED SUCCESSFUL** (2025-10-27):
  - **Purpose**: Verify refactored SeedDataService maintains functional equivalence after splitting 3,799-line monolith into 11 focused seeder classes
  - **Verification Status**: ‚úÖ **100% SUCCESSFUL - ALL VALIDATION CRITERIA PASSED (8/8)**
  - **Test Execution Summary**:
    - Build: ‚úÖ SUCCESS (0 errors, 39 warnings - non-breaking)
    - Docker Environment: ‚úÖ ALL HEALTHY (web, api, postgres)
    - Database Recreation: ‚úÖ SUCCESS (45 tables dropped and recreated)
    - Migrations: ‚úÖ SUCCESS (8 migrations applied)
    - Seed Execution: ‚úÖ SUCCESS (2848ms, 27 entity types)
    - Entity Counts: ‚úÖ ALL MATCH EXPECTED (15/15 verified)
    - Error-Free: ‚úÖ NO POST-SEEDING ERRORS
    - Transaction: ‚úÖ ATOMIC COMMIT VERIFIED
  - **Refactoring Details**:
    - **Before**: Single file `/apps/api/Services/SeedDataService.cs` (3,799 lines)
    - **After**: 11 files in `/apps/api/Services/Seeding/`
      - `SeedCoordinator.cs` (221 lines) - Orchestrator implementing ISeedDataService
      - 10 specialized seeders: User, Settings, Cms, Safety, Participation, SessionTicket, Volunteer, TicketPurchase, Vetting, Event
    - **Public API**: `ISeedDataService.SeedAllDataAsync(CancellationToken)` - **UNCHANGED**
  - **Data Verification Results** (all counts match expected):
    - Users: 19 ‚úÖ
    - Roles: 5 ‚úÖ
    - Events: 8 ‚úÖ
    - Sessions: 9 ‚úÖ
    - TicketTypes: 14 ‚úÖ
    - TicketPurchases: 21 ‚úÖ
    - VettingApplications: 14 ‚úÖ
    - VolunteerPositions: 21 ‚úÖ
    - SafetyIncidents: 8 ‚úÖ
    - Settings: 2 ‚úÖ
    - EventParticipations: 36 ‚úÖ
    - VolunteerSignups: 8 ‚úÖ
    - UserRoles: 9 ‚úÖ
    - VettingEmailTemplates: 6 ‚úÖ
    - CMS ContentPages: 10 ‚úÖ
  - **Status**: ‚úÖ **REFACTORING VERIFIED - READY FOR DEPLOYMENT**
  - **catalog_updated**: true (2025-10-27 - seed data refactoring verification complete)

---

### Test Categories

#### E2E Tests (Playwright) - BASELINE COMPLETE ‚úÖ
**Location**: `/apps/web/tests/playwright/`
**Count**: 89 spec files (83 in root, 6 in subdirectories) + 1 NEW (login-with-scene-name.spec.ts)
**Total Tests**: 425 test cases + 15 NEW (login with email/scene name)
**Status**: ‚ö†Ô∏è **70.3% PASS RATE - STABLE, NEEDS SYSTEMATIC FIXES**

**Pass Rate Details** (2025-10-23 Baseline):
- **Passing**: 299 tests (70.3%)
- **Failing**: 75 tests (17.6%)
- **Skipped**: 51 tests (12.0%)
- **Flaky**: 0 tests (0%) ‚úÖ

**Login Feature Tests** (2025-10-28 NEW - ALL PASSING):
- **Created**: 15 tests
- **Executed**: 14 tests
- **Passing**: 14 tests (100%) ‚úÖ
- **Status**: ‚úÖ **ALL PASSING** (localStorage bug fixed)

**Key Strengths**:
- ‚úÖ Authentication system: 100% operational (zero auth failures)
- ‚úÖ Test reliability: Zero flaky tests detected
- ‚úÖ Environment stability: Docker containers healthy (when seeding works)
- ‚úÖ Core user workflows: Login, events, RSVP, profile all working

**Known Issues** (6 failing test files from baseline):
1. `console-error-check.spec.ts` - Application generates 3 console errors (HIGH PRIORITY)
2. `vetting-notes-display.spec.ts` - Test data setup issue (MEDIUM)
3. `vetting-notes-direct.spec.ts` - Element visibility issue (MEDIUM)
4. `test-dom-check.spec.ts` - Navigation timeout (LOW)
5. `test-with-reload.spec.ts` - Navigation timeout (LOW)
6. `_archived/diagnostic-tests/page-load-diagnostic.spec.ts` - Deprecated API (LOW)

**Detailed Report**: `/test-results/e2e-baseline-2025-10-23.md`

#### Unit Tests (C# Backend) - SEEDING BLOCKED ‚ùå
**Location**: `/tests/unit/api/`
**Count**: 476 tests total (399 passing, 62 failing, 15 skipped) + 5 NEW (login with email/scene name)
**Status**: üî¥ **CANNOT RUN - API SEEDING CRASHES** (2025-10-28)
**Impact**: Database empty, no seed data for tests

**Critical Blocker** (2025-10-28):
- **Issue**: Historical ticket seeding generates duplicate ticket numbers
- **Impact**: API crashes on startup, cannot seed any data
- **Status**: 0% data seeded (regression from 45%)
- **Required Fix**: backend-developer (5 min, P0 blocker)

**Previous Pass Rate** (2025-10-24): 399/476 (83.8%)

#### Integration Tests
**Location**: `/tests/integration/`
**Status**: Real PostgreSQL with TestContainers + 7 NEW (login with email/scene name)

**NEW TESTS** (2025-10-27):
- **Created**: 7 new integration tests for login HTTP endpoints
- **File**: `/tests/unit/api/Features/Auth/LoginIntegrationTests.cs`
- **Status**: ‚úÖ **EXIST** (not executed in recent test run)

#### Unit Tests (React)
**Location**: `/apps/web/src/features/*/components/__tests__/` and `/apps/web/src/pages/__tests__/`
**Count**: 20+ test files (updated with incident reporting)
**Framework**: Vitest + React Testing Library
**Status**: ‚ùå **COMPILATION BLOCKED** (2025-10-20 - TypeScript errors)

#### CMS Pages (Database + API Verification)
**Location**: `/apps/api/Features/Cms/`
**Database**: `cms.ContentPages` table (PostgreSQL)
**API Endpoints**: `/api/cms/pages/{slug}` (public), `/api/cms/pages` (admin)
**Status**: ‚úÖ **ALL 10 PAGES OPERATIONAL** (2025-10-23)

---

## üìö Testing Standards & Documentation

### Essential Testing Guides
- **Playwright Standards**: `/docs/standards-processes/testing/playwright-standards.md`
- **Testing Guide**: `/docs/standards-processes/testing/TESTING_GUIDE.md`
- **Integration Patterns**: `/docs/standards-processes/testing/integration-test-patterns.md`
- **Docker-Only Testing**: `/docs/standards-processes/testing/docker-only-testing-standard.md`

### Test Status Tracking
- **Current Status**: `/docs/standards-processes/testing/CURRENT_TEST_STATUS.md`
- **E2E Patterns**: `/docs/standards-processes/testing/E2E_TESTING_PATTERNS.md`
- **Timeout Config**: `/apps/web/docs/testing/TIMEOUT_CONFIGURATION.md`

### Recent Test Reports
- **Historical Event Seeding**: `/test-results/historical-event-seeding-test-report-2025-10-28.md` üî¥ **CRITICAL BLOCKER** (2025-10-28 06:00 UTC)
- **Seed Data Refactoring**: `/test-results/seed-data-refactoring-verification-2025-10-27.md` ‚úÖ **ALL VERIFIED** (2025-10-27)
- **Login Scene Name Final**: `/test-results/login-scene-name-final-test-execution-report-2025-10-27.md` ‚úÖ **ALL PASSING** (2025-10-28 02:15 UTC)
- **Backend Failure Analysis**: `/test-results/failing-tests-analysis-2025-10-23.md` ‚ö†Ô∏è **52 FAILURES CATEGORIZED** (2025-10-23)
- **E2E Baseline**: `/test-results/e2e-baseline-2025-10-23.md` ‚ö†Ô∏è **70.3% PASS RATE** (2025-10-23 23:29)
- **CMS Pages**: `/test-results/cms-pages-seeding-test-report-2025-10-23.md` ‚úÖ **ALL OPERATIONAL** (2025-10-23 22:30)

---

## üö® Launch Readiness Status

### Historical Event Seeding: üî¥ **RED - CRITICAL BLOCKER**

**CRITICAL BLOCKER** (1 - blocks ALL seeding):
1. üî¥ **Duplicate ticket number generation** - API crashes on startup (backend-developer, 5 min, P0)

**Impact**: **COMPLETE REGRESSION**
- Before fix: 45% data seeded
- After fix: **0% data seeded (API crashes)**
- Assessment: **Critical regression** (-45% completion)

**Risk**: Cannot start development environment until fixed

### Backend API Tests: üî¥ **RED - BLOCKED BY SEEDING CRASH**

**Current Status**: Cannot run tests (database empty, no seed data)

**Must Fix Before Launch** (24 tests - P1):
1. ‚ùå Seeding blocker (1 issue) - Blocks everything
2. ‚ùå Participation/RSVP (10 tests) - [NotMapped] property access
3. ‚ùå Vetting Email Service (13 tests) - Users won't receive status updates

### E2E Tests: ‚úÖ **GREEN - 70% READY + NEW LOGIN TESTS PASSING**

**Core Functionality**: ‚úÖ **OPERATIONAL**
- Users can register, login, browse events, and RSVP
- Admin can manage events and vetting
- Login with email OR scene name: ‚úÖ **ALL 14 TESTS PASSING**

---

## üîë Test Accounts

**STATUS**: ‚ùå **NO ACCOUNTS (DATABASE EMPTY)**

```
# CANNOT USE - Database empty due to seeding crash
admin@witchcityrope.com / Test123! - Would be Administrator, Vetted
coordinator1@witchcityrope.com / Test123! - Would be SafetyTeam
# ... (all accounts unavailable)
```

---

*This is a navigation index only. For detailed test information, see Part 2, 3, and 4.*
*For current test execution, see CURRENT_TEST_STATUS.md*
*For testing standards, see TESTING_GUIDE.md*
*For critical seeding blocker, see `/test-results/historical-event-seeding-test-report-2025-10-28.md`*
