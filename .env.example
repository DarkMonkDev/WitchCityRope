# .env.example - Environment Configuration Template
# Copy this file to .env and customize for your environment
# This file shows all available environment variables with example values

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# Application Metadata
VITE_APP_NAME=WitchCityRope
VITE_APP_VERSION=1.0.0
VITE_APP_ENVIRONMENT=development

# Environment Type (development, test, production)
NODE_ENV=development
ASPNETCORE_ENVIRONMENT=Development

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Database Settings
POSTGRES_DB=witchcityrope
POSTGRES_USER=postgres
POSTGRES_PASSWORD=devpass123

# Test Database Settings (for docker-compose.test.yml)
POSTGRES_TEST_PASSWORD=testpass123

# Production Database Settings (override in .env.production)
# POSTGRES_USER=witchcity_prod
# POSTGRES_PASSWORD=secure_production_password_here

# ============================================================================
# AUTHENTICATION & JWT CONFIGURATION
# ============================================================================

# JWT Authentication Settings
JWT_SECRET=dev-jwt-secret-for-local-testing-make-it-long-enough
JWT_ISSUER=witchcityrope-api
JWT_AUDIENCE=witchcityrope-web
JWT_EXPIRY_MINUTES=60

# Authentication Requirements
AUTH_REQUIRE_HTTPS=false

# Test JWT Settings (for docker-compose.test.yml)
JWT_TEST_SECRET=test-jwt-secret-for-ci-make-it-predictable-and-long-enough

# Production JWT Settings (override in .env.production)
# JWT_SECRET=very_secure_production_jwt_secret_at_least_32_characters
# JWT_ISSUER=https://api.witchcityrope.com
# JWT_AUDIENCE=https://witchcityrope.com
# JWT_EXPIRY_MINUTES=15
# AUTH_REQUIRE_HTTPS=true

# ============================================================================
# API & WEB SERVICE CONFIGURATION
# ============================================================================

# API Service URLs
VITE_API_BASE_URL=http://localhost:5655

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,http://127.0.0.1:5173

# Production URLs (override in .env.production)
# VITE_API_BASE_URL=https://api.witchcityrope.com
# CORS_ALLOWED_ORIGINS=https://witchcityrope.com

# ============================================================================
# AUTHENTICATION COOKIE CONFIGURATION
# ============================================================================

# Cookie Settings
VITE_AUTH_COOKIE_NAME=WitchCityRope.Auth
VITE_AUTH_COOKIE_DOMAIN=localhost
VITE_AUTH_COOKIE_SECURE=false

# Production Cookie Settings (override in .env.production)
# VITE_AUTH_COOKIE_DOMAIN=.witchcityrope.com
# VITE_AUTH_COOKIE_SECURE=true

# ============================================================================
# FEATURE FLAGS & DEBUG SETTINGS
# ============================================================================

# Development Features
VITE_ENABLE_DEBUG=true
VITE_ENABLE_MOCK_DATA=true
VITE_ENABLE_ANALYTICS=false

# Production Features (override in .env.production)
# VITE_ENABLE_DEBUG=false
# VITE_ENABLE_MOCK_DATA=false
# VITE_ENABLE_ANALYTICS=true

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log Levels (Debug, Information, Warning, Error)
LOG_LEVEL=Information

# Development Logging
# LOG_LEVEL=Debug

# Production Logging (override in .env.production)
# LOG_LEVEL=Warning

# ============================================================================
# DOCKER & NETWORKING CONFIGURATION
# ============================================================================

# Docker Network Configuration
DOCKER_NETWORK=witchcity-net

# Container Resource Limits (production)
# POSTGRES_MEMORY_LIMIT=4g
# API_MEMORY_LIMIT=2g
# WEB_MEMORY_LIMIT=1g

# ============================================================================
# DEVELOPMENT-SPECIFIC CONFIGURATION
# ============================================================================

# Hot Reload Configuration (development only)
CHOKIDAR_USEPOLLING=true
CHOKIDAR_INTERVAL=1000
VITE_HMR_PORT=24678
VITE_HMR_HOST=localhost

# .NET Development Configuration
DOTNET_USE_POLLING_FILE_WATCHER=true
DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true

# Development Error Handling
ASPNETCORE_DETAILEDERRORS=true
ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=false

# ============================================================================
# TEST CONFIGURATION
# ============================================================================

# CI/CD Settings (test environment)
CI=false

# Playwright Test Configuration
PLAYWRIGHT_WORKERS=2
PLAYWRIGHT_HEADED=false
PLAYWRIGHT_BROWSER=chromium
PLAYWRIGHT_TIMEOUT=30000

# Test Output Configuration
PLAYWRIGHT_REPORT_DIR=/app/reports
PLAYWRIGHT_SCREENSHOT_DIR=/app/screenshots

# Test User Configuration
TEST_USER_EMAIL=test@witchcityrope.com
TEST_USER_PASSWORD=TestPass123!
TEST_USER_SCENE_NAME=TestUser

# Node.js Performance Configuration
NODE_OPTIONS=--max-old-space-size=2048
NPM_CONFIG_CACHE=/app/.npm

# ============================================================================
# PRODUCTION SECURITY CONFIGURATION
# ============================================================================

# SSL/TLS Configuration (production only)
# SSL_PROTOCOLS=TLSv1.2 TLSv1.3
# SSL_CIPHERS=ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384

# Security Headers (production only)
# HSTS_MAX_AGE=31536000
# CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'

# ASP.NET Core Production Configuration
# ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
# ASPNETCORE_HTTPS_PORT=443

# .NET Runtime Optimization (production only)
# DOTNET_GCServer=1
# DOTNET_gcConcurrent=1
# DOTNET_ReadyToRun=1

# Monitoring Configuration
# ASPNETCORE_HOSTINGSTARTUP__KEYVAULT__CONFIGURATIONENABLED=false

# ============================================================================
# BACKUP & MAINTENANCE CONFIGURATION
# ============================================================================

# Database Backup Configuration (production only)
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30
# BACKUP_COMPRESSION=gzip

# ============================================================================
# ENVIRONMENT-SPECIFIC FILES
# ============================================================================

# Create these additional files for specific environments:
# .env                  - Default development settings (copy from this file)
# .env.development      - Development overrides (optional)
# .env.test            - Test environment settings
# .env.production      - Production secrets (never commit to git!)

# ============================================================================
# SECURITY NOTES
# ============================================================================

# IMPORTANT SECURITY CONSIDERATIONS:
# 
# 1. Development Environment:
#    - Use simple passwords for local development only
#    - HTTP is acceptable for localhost development
#    - Extended JWT lifetimes are acceptable for convenience
# 
# 2. Test Environment:
#    - Use predictable secrets for CI/CD consistency
#    - Internal networking only (no external ports)
#    - Optimized for speed and isolation
# 
# 3. Production Environment:
#    - NEVER use default passwords in production
#    - ALWAYS use HTTPS for production authentication
#    - Use short JWT token lifetimes (15 minutes recommended)
#    - Store production secrets in secure secret management systems
#    - Use Docker secrets for sensitive data in production
# 
# 4. Secret Management:
#    - Add .env.production to .gitignore
#    - Use environment-specific secret management
#    - Rotate secrets regularly
#    - Use Docker secrets for production deployments
# 
# 5. Environment Variable Files:
#    - .env.example: Template (safe to commit)
#    - .env: Local development (safe to commit with dev values)
#    - .env.production: Production secrets (NEVER commit)
#    - .env.test: Test configuration (safe to commit)

# ============================================================================
# USAGE EXAMPLES
# ============================================================================

# Development Setup:
# 1. Copy this file to .env
# 2. Modify values as needed for local development
# 3. Run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

# Test Setup:
# 1. Create .env.test with test-specific values
# 2. Run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up

# Production Setup:
# 1. Create .env.production with secure production values
# 2. Set up Docker secrets for sensitive data
# 3. Run: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d