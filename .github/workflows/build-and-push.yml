name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - staging
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.gitignore'

  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

env:
  DOCKER_REGISTRY: registry.digitalocean.com/witchcityrope

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: set-tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            echo "IMAGE_TAG=staging" >> $GITHUB_ENV
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
          fi
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITALOCEAN_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # =======================================================================
      # Build and Push API Image
      # =======================================================================
      - name: Build API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/api:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REGISTRY }}/api:${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/api:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/api:buildcache,mode=max
          target: production

      # =======================================================================
      # Build and Push Web Image
      # =======================================================================
      - name: Build Web Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/web:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_REGISTRY }}/web:${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/web:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/web:buildcache,mode=max
          target: production
          build-args: |
            VITE_API_BASE_URL=/api
            VITE_APP_TITLE=WitchCityRope
            VITE_APP_VERSION=${{ env.SHORT_SHA }}

      # =======================================================================
      # Summary and Notifications
      # =======================================================================
      - name: Build Summary
        run: |
          echo "## Docker Images Built and Pushed :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag:** ${{ env.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit SHA:** ${{ env.SHORT_SHA }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Images:" >> $GITHUB_STEP_SUMMARY
          echo "- API: \`${{ env.DOCKER_REGISTRY }}/api:${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Web: \`${{ env.DOCKER_REGISTRY }}/web:${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ env.ENVIRONMENT }}" == "staging" ]; then
            echo "**Next Step:** Deploy to staging automatically triggered" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ env.ENVIRONMENT }}" == "production" ]; then
            echo "**Next Step:** Deploy to production (manual approval required)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Trigger staging deployment
        if: github.ref == 'refs/heads/staging'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy-staging
          client-payload: '{"image_tag": "${{ env.IMAGE_TAG }}", "sha": "${{ env.SHORT_SHA }}"}'

      - name: Notify deployment ready for production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Production images built. Ready for manual deployment approval."
          echo "Go to Actions â†’ Deploy to Production to approve deployment"
