name: Security Scan

on:
  schedule:
    # Run at 2 AM UTC every Monday
    - cron: '0 2 * * 1'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/*.csproj'
      - '**/packages.config'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Check for vulnerable packages
      run: |
        echo "Checking for vulnerable NuGet packages..."
        dotnet list package --vulnerable --include-transitive
        
        # Capture output and check for vulnerabilities
        OUTPUT=$(dotnet list package --vulnerable --include-transitive 2>&1)
        echo "$OUTPUT"
        
        if echo "$OUTPUT" | grep -q "has the following vulnerable packages"; then
          echo "::error::Vulnerable packages found!"
          exit 1
        else
          echo "No vulnerable packages found."
        fi

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'WitchCityRope'
        path: '.'
        format: 'HTML,JSON'
        args: >
          --enableRetired
          --enableExperimental
          
    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/

    - name: Create issue for vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = 'Security: Vulnerable dependencies detected';
          const body = `## Security Scan Failed
          
          The scheduled security scan has detected vulnerable dependencies in the project.
          
          **Action Required:**
          1. Review the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
          2. Check the dependency reports in the artifacts
          3. Update vulnerable packages
          
          **Workflow:** ${context.workflow}
          **Run Number:** ${context.runNumber}
          **Triggered by:** ${context.eventName}
          
          cc @security-team`;
          
          // Check if issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'security,dependencies'
          });
          
          const existingIssue = issues.data.find(issue => issue.title === title);
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies', 'automated']
            });
          }