version: '3.8'

services:
  api:
    image: witchcityrope-api:latest
    build:
      context: ../
      dockerfile: src/WitchCityRope.Api/Dockerfile
    container_name: witchcityrope-api
    ports:
      - "5653:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=/app/data/witchcityrope.db
      - JwtSettings__Secret=${JWT_SECRET:-ThisIsAVeryLongSecretKeyForProductionUseOnly123!}
      - JwtSettings__Issuer=WitchCityRope
      - JwtSettings__Audience=WitchCityRopeUsers
      - JwtSettings__ExpirationInMinutes=1440
    volumes:
      - api-data:/app/data
    networks:
      - witchcityrope-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  web:
    image: witchcityrope-web:latest
    build:
      context: ../
      dockerfile: src/WitchCityRope.Web/Dockerfile
    container_name: witchcityrope-web
    ports:
      - "5651:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApiSettings__BaseUrl=http://api:8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - witchcityrope-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: witchcityrope-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    networks:
      - witchcityrope-network
    restart: unless-stopped

networks:
  witchcityrope-network:
    driver: bridge

volumes:
  api-data:
    name: witchcityrope-api-data