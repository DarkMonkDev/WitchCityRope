@page "/faq"
@using Microsoft.AspNetCore.Authorization
@attribute [AllowAnonymous]
@rendermode @(new Microsoft.AspNetCore.Components.Web.InteractiveServerRenderMode())
@using WitchCityRope.Core.Services
@using WitchCityRope.Core.Entities
@using System.Security.Claims
@using Syncfusion.Blazor.RichTextEditor
@using Microsoft.AspNetCore.Components.Forms
@using WitchCityRope.Web.Shared.Validation.Components
@inject IContentPageService ContentPageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@layout MainLayout

<PageTitle>FAQ - Witch City Rope</PageTitle>

<div class="faq-page">
    <div class="container">
        <div class="page-header">
            <h1>@(contentPage?.Title ?? "Frequently Asked Questions")</h1>
            <p class="lead">Find answers to common questions about Witch City Rope</p>
        </div>
        
        @if (IsAdmin)
        {
            <div class="cms-admin-controls">
                @if (IsEditing)
                {
                    <div class="cms-edit-toolbar">
                        <button class="btn btn-success" @onclick="SaveContentAsync" disabled="@IsSaving">
                            @if (IsSaving)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                            }
                            <i class="fas fa-save me-1"></i> Save
                        </button>
                        <button class="btn btn-secondary" @onclick="CancelEditAsync">
                            <i class="fas fa-times me-1"></i> Cancel
                        </button>
                    </div>
                }
                else
                {
                    <button class="btn btn-outline-primary btn-sm" @onclick="StartEditAsync">
                        <i class="fas fa-edit me-1"></i> Edit Page
                    </button>
                }
            </div>
        }
        
        <div class="cms-content-container">
            @if (IsEditing)
            {
                <div class="cms-editor-container">
                    <EditForm Model="@editModel" OnValidSubmit="SaveContentAsync">
                        <DataAnnotationsValidator />
                        
                        <div class="mb-3">
                            <WcrInputText @bind-Value="editModel.Title" 
                                          Label="Page Title"
                                          IsRequired="true" />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Content</label>
                            <SfRichTextEditor @bind-Value="@EditableContent" 
                                              Height="600px"
                                              @ref="RichTextEditorRef"
                                              Placeholder="Enter your content here...">
                                <RichTextEditorToolbarSettings Items="@ToolbarItems" />
                            </SfRichTextEditor>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <WcrInputTextArea @bind-Value="editModel.MetaDescription" 
                                                  Label="Meta Description"
                                                  Placeholder="Page description for SEO"
                                                  Rows="3" />
                            </div>
                            <div class="col-md-6">
                                <WcrInputTextArea @bind-Value="editModel.MetaKeywords" 
                                                  Label="Meta Keywords"
                                                  Placeholder="Keywords separated by commas"
                                                  Rows="3" />
                            </div>
                        </div>
                    </EditForm>
                </div>
            }
            else
            {
                <div class="cms-content">
                    @if (contentPage != null)
                    {
                        @((MarkupString)contentPage.Content)
                    }
                    else
                    {
                        <div class="default-content">
                            <div class="faq-section">
                                <h2>General Questions</h2>
                                <div class="faq-item">
                                    <h3>What is Witch City Rope?</h3>
                                    <p>Witch City Rope is Salem's premier rope bondage education and community organization. We offer workshops, social events, and a supportive community for rope enthusiasts of all experience levels.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>Do I need experience to attend?</h3>
                                    <p>Not at all! We welcome complete beginners. Many of our events are specifically designed for newcomers, and we have a strong culture of mentorship and support.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>Is Witch City Rope LGBTQ+ friendly?</h3>
                                    <p>Absolutely. We are committed to creating an inclusive, welcoming environment for people of all sexual orientations, gender identities, and relationship styles.</p>
                                </div>
                            </div>

                            <div class="faq-section">
                                <h2>Events & Classes</h2>
                                <div class="faq-item">
                                    <h3>How do I register for events?</h3>
                                    <p>You can browse and register for events on our <a href="/events">Events page</a>. Some events are open to the public, while others require membership or vetting.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>What should I bring to a workshop?</h3>
                                    <p>For most workshops, rope and basic equipment are provided. Check the event description for specific requirements. We recommend comfortable clothes you can move in.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>Can I attend alone?</h3>
                                    <p>Yes! Many of our members attend events solo. Our community is very welcoming, and you'll have plenty of opportunities to meet like-minded people.</p>
                                </div>
                            </div>

                            <div class="faq-section">
                                <h2>Membership & Vetting</h2>
                                <div class="faq-item">
                                    <h3>What is the vetting process?</h3>
                                    <p>Our vetting process helps ensure community safety and compatibility. It involves an application, reference checks, and sometimes a brief interview. Learn more on our <a href="/how-to-join">How to Join</a> page.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>How long does vetting take?</h3>
                                    <p>Most applications are reviewed within 5-7 business days, though it may take longer during busy periods or if we need additional information.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>What if I don't have community references?</h3>
                                    <p>Start by attending our public workshops and events to meet community members who can serve as references in the future.</p>
                                </div>
                            </div>

                            <div class="faq-section">
                                <h2>Safety & Policies</h2>
                                <div class="faq-item">
                                    <h3>What safety measures are in place?</h3>
                                    <p>Safety is our top priority. All events have safety monitors, first aid equipment, and clear protocols. We require ongoing consent and maintain a zero-tolerance policy for violations.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>How do I report a concern?</h3>
                                    <p>You can report safety concerns or policy violations through our <a href="/incident-report">incident reporting form</a> or by contacting our safety team directly.</p>
                                </div>
                                <div class="faq-item">
                                    <h3>Are photography and phones allowed?</h3>
                                    <p>Photography policies vary by event and are clearly communicated. Generally, phones are allowed for communication but photography requires explicit consent from all involved parties.</p>
                                </div>
                            </div>

                            <div class="contact-section">
                                <h2>Still Have Questions?</h2>
                                <p>If you can't find the answer you're looking for, please don't hesitate to reach out!</p>
                                <a href="/contact" class="btn btn-primary">Contact Us</a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ContentPage? contentPage;
    private bool IsAdmin = false;
    private bool IsEditing = false;
    private bool IsSaving = false;
    private string UserId = string.Empty;
    
    private SfRichTextEditor? RichTextEditorRef;
    private string EditableContent = string.Empty;
    private ContentEditModel editModel = new();
    
    private class ContentEditModel
    {
        public string Title { get; set; } = string.Empty;
        public string MetaDescription { get; set; } = string.Empty;
        public string MetaKeywords { get; set; } = string.Empty;
    }
    
    private readonly List<ToolbarItemModel> ToolbarItems = new()
    {
        new() { Command = ToolbarCommand.Bold },
        new() { Command = ToolbarCommand.Italic },
        new() { Command = ToolbarCommand.Underline },
        new() { Command = ToolbarCommand.StrikeThrough },
        new() { Command = ToolbarCommand.Separator },
        new() { Command = ToolbarCommand.Formats },
        new() { Command = ToolbarCommand.Alignments },
        new() { Command = ToolbarCommand.Separator },
        new() { Command = ToolbarCommand.OrderedList },
        new() { Command = ToolbarCommand.UnorderedList },
        new() { Command = ToolbarCommand.Separator },
        new() { Command = ToolbarCommand.CreateLink },
        new() { Command = ToolbarCommand.Separator },
        new() { Command = ToolbarCommand.SourceCode },
        new() { Command = ToolbarCommand.Undo },
        new() { Command = ToolbarCommand.Redo }
    };
    
    protected override async Task OnInitializedAsync()
    {
        await LoadAuthenticationStateAsync();
        await Task.Delay(50);
        await LoadContentAsync();
    }
    
    private async Task LoadAuthenticationStateAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            
            if (user.Identity?.IsAuthenticated == true)
            {
                IsAdmin = user.IsInRole("Administrator");
            }
            
            UserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
        }
        catch (Exception ex)
        {
            IsAdmin = false;
            UserId = string.Empty;
        }
    }
    
    private async Task LoadContentAsync()
    {
        contentPage = await ContentPageService.GetOrCreateBySlugAsync("faq", "Frequently Asked Questions");
    }
    
    private async Task StartEditAsync()
    {
        if (!IsAdmin || contentPage == null) return;
        
        EditableContent = contentPage.Content;
        editModel = new ContentEditModel
        {
            Title = contentPage.Title,
            MetaDescription = contentPage.MetaDescription ?? string.Empty,
            MetaKeywords = contentPage.MetaKeywords ?? string.Empty
        };
        
        IsEditing = true;
        StateHasChanged();
        
        await Task.Delay(100);
    }
    
    private async Task SaveContentAsync()
    {
        if (!IsAdmin || contentPage == null || IsSaving) return;
        
        IsSaving = true;
        StateHasChanged();
        
        try
        {
            contentPage = await ContentPageService.UpdateAsync(
                contentPage.Id, 
                EditableContent, 
                editModel.Title, 
                UserId, 
                editModel.MetaDescription, 
                editModel.MetaKeywords);
            
            IsEditing = false;
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", $"Error saving content: {ex.Message}");
        }
        finally
        {
            IsSaving = false;
            StateHasChanged();
        }
    }
    
    private async Task CancelEditAsync()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            "Are you sure you want to cancel? Any unsaved changes will be lost.");
            
        if (confirmed)
        {
            IsEditing = false;
            StateHasChanged();
        }
    }
}

<style>
    .faq-page {
        padding: 2rem 0;
        min-height: calc(100vh - 200px);
        background: linear-gradient(135deg, #fff8f0 0%, #f5f5f5 100%);
    }
    
    .page-header {
        margin-bottom: 3rem;
        text-align: center;
    }
    
    .page-header h1 {
        color: var(--color-burgundy, #880124);
        margin-bottom: 0.5rem;
        font-size: 2.5rem;
        font-weight: 700;
    }
    
    .page-header .lead {
        color: var(--color-smoke, #4A4A4A);
        font-size: 1.125rem;
    }
    
    .cms-admin-controls {
        position: fixed;
        top: 100px;
        right: 20px;
        z-index: 1000;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 0.5rem;
    }
    
    .cms-edit-toolbar {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }
    
    .cms-content-container {
        min-height: 400px;
    }
    
    .cms-editor-container {
        background: var(--color-ivory, #FFF8F0);
        border-radius: var(--radius-lg, 0.75rem);
        padding: 2rem;
        margin-bottom: 2rem;
    }
    
    .cms-content {
        background: white;
        border-radius: 12px;
        padding: 3rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        border: 1px solid rgba(139, 69, 19, 0.1);
    }
    
    .default-content .faq-section {
        margin-bottom: 3rem;
    }
    
    .faq-section h2 {
        color: #8B4513;
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid rgba(139, 69, 19, 0.2);
    }
    
    .faq-item {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: #f9f9f9;
        border-radius: 8px;
        border-left: 4px solid #8B4513;
    }
    
    .faq-item h3 {
        color: #333;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
    }
    
    .faq-item p {
        color: #555;
        line-height: 1.6;
        margin: 0;
    }
    
    .faq-item a {
        color: #8B4513;
        text-decoration: none;
        font-weight: 500;
    }
    
    .faq-item a:hover {
        text-decoration: underline;
    }
    
    .contact-section {
        text-align: center;
        padding: 2rem;
        background: #f0f8f0;
        border-radius: 8px;
        margin-top: 3rem;
    }
    
    .contact-section h2 {
        color: #8B4513;
        margin-bottom: 1rem;
    }
    
    .contact-section p {
        color: #666;
        margin-bottom: 1.5rem;
    }
    
    .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .btn-primary {
        background: #8B4513;
        color: white;
    }
    
    .btn-primary:hover {
        background: #6B3410;
        transform: translateY(-1px);
    }
    
    .btn-outline-primary {
        background: transparent;
        color: #8B4513;
        border: 1px solid #8B4513;
    }
    
    .btn-outline-primary:hover {
        background: #8B4513;
        color: white;
    }
    
    .btn-secondary {
        background: #f8f9fa;
        color: #333;
        border: 1px solid #dee2e6;
    }
    
    .btn-secondary:hover {
        background: #e9ecef;
    }
    
    .btn-success {
        background: #28a745;
        color: white;
    }
    
    .btn-success:hover {
        background: #218838;
    }
    
    @@media (max-width: 768px) {
        .faq-page {
            padding: 1rem 0;
        }
        
        .cms-admin-controls {
            position: static;
            margin-bottom: 1rem;
            border-radius: 4px;
        }
        
        .cms-content,
        .cms-editor-container {
            padding: 2rem;
        }
        
        .page-header {
            margin-bottom: 2rem;
        }
        
        .page-header h1 {
            font-size: 2rem;
        }
        
        .faq-item {
            padding: 1.25rem;
        }
    }
</style>