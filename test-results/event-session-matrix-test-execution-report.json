{
  "executionDate": "2025-08-25T00:00:00Z",
  "testExecutor": "test-executor",
  "status": "failed",
  "environment": {
    "docker": "mixed - web unhealthy, api healthy, postgres healthy",
    "database": "connection_failed - authentication issues",
    "services": {
      "web": "running on port 5173 - unhealthy",
      "api": "running on port 5655 - healthy", 
      "postgres": "running on port 5433 - healthy"
    },
    "compilation": "failed - 13 errors detected"
  },
  "testSuites": {
    "EventSessionTests.cs": {
      "location": "tests/WitchCityRope.Api.Tests/Features/Events/EventSessionTests.cs",
      "status": "not_executable",
      "reason": "compilation_errors_prevent_execution",
      "testCount": 13,
      "categories": [
        "Event Session Creation Tests (3 tests)",
        "Ticket Type Session Mapping Tests (2 tests)", 
        "Capacity Calculation Tests (4 tests)",
        "RSVP vs Ticket Handling Tests (3 tests)",
        "Complex Multi-Session Scenarios (1 test + 1 theory with multiple cases)"
      ]
    },
    "EventSessionMatrixIntegrationTests.cs": {
      "location": "tests/integration/events/EventSessionMatrixIntegrationTests.cs", 
      "status": "not_executable",
      "reason": "compilation_errors_prevent_execution",
      "testCount": 6,
      "categories": [
        "End-to-End Event Creation with Session Matrix (1 test)",
        "Session Availability Calculations (2 tests)",
        "RSVP vs Paid Registration Workflow (2 tests)", 
        "Complex Multi-Session Scenarios (1 test)"
      ]
    }
  },
  "criticalIssues": [
    {
      "type": "compilation_error",
      "severity": "blocking",
      "count": 13,
      "details": [
        "Missing WitchCityRope.Infrastructure namespace - tests cannot find DbContext",
        "Missing Npgsql package reference in test projects",
        "UserAuthentication entity property mismatch - EmailVerificationTokenCreatedAt not found",
        "User entity missing FirstName/LastName properties",
        "Multiple test framework dependency issues"
      ],
      "suggestedFix": "backend-developer needed for entity model fixes"
    },
    {
      "type": "environment_issue", 
      "severity": "medium",
      "details": "Database authentication failed with user 'witchcityrope'",
      "suggestedFix": "Check database credentials or use different connection"
    },
    {
      "type": "missing_implementation",
      "severity": "high", 
      "details": "Test builders and domain classes referenced in tests do not exist",
      "missingClasses": [
        "EventWithSessionsBuilder",
        "TicketTypeBuilder", 
        "EventSession entity",
        "TicketType entity with session mapping",
        "Session capacity calculation logic",
        "RSVP vs payment processing logic"
      ],
      "suggestedFix": "backend-developer needed for domain model implementation"
    }
  ],
  "testAnalysis": {
    "totalTests": 19,
    "executableTests": 0,
    "blockedTests": 19,
    "testCoverage": {
      "eventSessionCreation": "not_implemented",
      "ticketTypeMapping": "not_implemented", 
      "capacityCalculations": "not_implemented",
      "rsvpWorkflow": "not_implemented",
      "complexScenarios": "not_implemented"
    }
  },
  "nextStepsRequired": [
    {
      "priority": "critical",
      "task": "Fix compilation errors",
      "assignedTo": "backend-developer",
      "details": "Resolve all 13 compilation errors preventing test execution"
    },
    {
      "priority": "high",
      "task": "Implement domain models",
      "assignedTo": "backend-developer", 
      "details": "Create EventSession, TicketType entities and session mapping logic"
    },
    {
      "priority": "high",
      "task": "Create test builders",
      "assignedTo": "backend-developer",
      "details": "Implement EventWithSessionsBuilder and TicketTypeBuilder for TDD workflow"
    },
    {
      "priority": "medium",
      "task": "Fix database connection",
      "assignedTo": "test-executor",
      "details": "Resolve PostgreSQL authentication for integration tests"
    }
  ],
  "implementationGaps": {
    "coreEntities": [
      "EventSession - atomic capacity units with session names (S1, S2, S3)",
      "TicketType with IncludedSessions mapping",
      "Session capacity tracking across multiple ticket types",
      "RSVP mode vs payment processing logic"
    ],
    "businessLogic": [
      "Multi-session availability calculations",
      "Cross-session capacity consumption",
      "Social event RSVP workflow", 
      "Class event payment requirement enforcement"
    ],
    "apiEndpoints": [
      "/api/events with session matrix creation",
      "/api/events/{id}/ticket-availability",
      "/api/events/{id}/ticket-types",
      "/api/events/register with capacity validation"
    ]
  },
  "testDesignQuality": {
    "rating": "excellent",
    "strengths": [
      "Comprehensive TDD approach with clear test categories",
      "Complex multi-session scenarios well covered",
      "Realistic ticket type combinations", 
      "Clear separation of RSVP vs paid registration logic",
      "Helper methods define desired API interfaces"
    ],
    "testPatterns": [
      "Builder pattern for test data creation",
      "Theory tests for edge cases",
      "Full stack integration test coverage",
      "End-to-end workflow validation"
    ]
  }
}